from django.conf.urls import url
from django.views.decorators.http import require_http_methods, require_POST, require_GET

from core.views import auth, users, services, googleapis, orders, events, currencies, issues, chats, adminviews, \
    adminchatviews, configuration

webapiUrls = [
    url(
        r'^api/configuration/get/$',
        configuration.getConfiguration,
        name='get-configuration'
    ),
    url(
        r'^api/auth/login/$',
        auth.login,
        name='login'
    ),
    url(
        r'^api/auth/logout/$',
        auth.logout,
        name='logout'
    ),
    url(
        r'^api/auth/signup/$',
        auth.signup,
        name='signup'
    ),
    url(
        r'^api/auth/verifySignup/$',
        auth.verifySignup,
        name='verfify-signup'
    ),
    url(
        r'^api/auth/signupLevel1/$',
        auth.signupLevel1,
        name='signup-level-1'
    ),
    url(
        r'^api/auth/sendVerifyMobileNumber/$',
        auth.sendVerifyMobileNumber,
        name='send-verify-mobile-number'
    ),
    url(
        r'^api/auth/send2FASMS/$',
        auth.send2FASMS,
        name='send-verify-send2FASMS'
    ),
    url(
        r'^api/auth/verifyMobileNumber/$',
        auth.verifyMobileNumber,
        name='verify-mobile-number'
    ),
    url(
        r'^api/auth/passwordRecovery/$',
        auth.passwordRecovery,
        name='password-recovery'
    ),
    url(
        r'^api/auth/verifyResetPassword/$',
        auth.verifyResetPassword,
        name='verify-reset-password'
    ),
    url(
        r'^api/auth/resetPassword/$',
        auth.resetPassword,
        name='reset-password'
    ),
    url(
        r'^api/auth/addNewsLetterEmail/$',
        auth.addNewsLetterEmail,
        name='add-email-to-news-letter'
    ),
    url(
        r'^api/user/uploadAvatar/$',
        users.uploadUserAvatar,
        name='upload-avatar'
    ),
    url(
        r'^api/user/uploadIDDocFront/$',
        users.uploadIDDocFront,
        name='upload-iddocfront'
    ),
    url(
        r'^api/user/uploadIDDocBack/$',
        users.uploadIDDocBack,
        name='upload-iddocback'
    ),
    url(
        r'^api/user/changePassword/$',
        users.changePassword,
        name='change-password'
    ),
    url(
        r'^api/user/updatePlayerId/$',
        users.updatePlayerId,
        name='update-player-id'
    ),
    url(
        r'^api/user/uploadProofOfresidence/$',
        users.uploadProofOfresidence,
        name='upload-proofofresidence'
    ),
    url(
        r'^api/user/uploadSelfIDoc/$',
        users.uploadSelfIDoc,
        name='upload-selfidoc'
    ),
    url(
        r'^api/user/profile/$',
        users.userProfile,
        name='user-profile'
    ),
    url(
        r'^api/user/updateProfileSetting/$',
        users.updateProfileSetting,
        name='user-update-profile-setting'
    ),
    url(
        r'^cronjobs/updateAllUsersEmptyAvatarImages/$',
        users.updateAllUsersEmptyAvatarImages,
        name='update-all-users-empty-avatar-images'
    ),
    url(
        r'^api/user/address/create/$',
        require_http_methods(['POST'])(users.addAddress),
        name='user-profile-add-address'
    ),
    url(
        r'^api/user/address/edit/$',
        require_http_methods(['PUT'])(users.editAddress),
        name='user-profile-edit-address'
    ),
    url(
        r'^api/user/address/delete/(?P<address_id>\d+)$',
        require_http_methods(['DELETE'])(users.deleteAddress),
        name='user-profile-delete-address'
    ),
    url(
        r'^api/user/profile/enable2FASMS/$',
        users.enable2FASMS,
        name='user-profile-enable2FASMS'
    ),
    url(
        r'^api/user/profile/enable2FAGoogle/$',
        users.enable2FAGoogle,
        name='user-profile-enable2FAGoogle'
    ),
    url(
        r'^api/user/profile/forwarderFeedback/$',
        users.forwarderFeedback,
        name='user-profile-forwarderFeedback'
    ),
    url(
        r'^api/user/profile/buyerFeedback/$',
        users.buyerFeedback,
        name='user-profile-buyerFeedback'
    ),
    url(
        r'^api/user/notifications/$',
        users.userNotifications,
        name='user-notifications'
    ),
    url(
        r'^api/user/notifications/read/$',
        users.setNotificationAsRead,
        name='user-set-notification-as-read'
    ),
    url(
        r'^api/service/create/$',
        services.createService,
        name='create-service'
    ),
    url(
        r'^api/service/courierPartnerCost/$',
        services.courierPartnerCost,
        name='service-courier-cost'
    ),
    url(
        r'^api/service/(?P<service_id>\d+)$',
        require_http_methods(['GET'])(services.getService),
        name='get-service'
    ),
    url(
        r'^api/service/delete/(?P<service_id>\d+)$',
        require_http_methods(['DELETE'])(services.deleteService),
        name='delete-service'
    ),
    url(
        r'^api/service/edit/$',
        require_http_methods(['PUT'])(services.editService),
        name='edit-service'
    ),
    url(
        r'^api/service/$',
        require_GET(services.getServices),
        name='get-services'
    ),
    url(
        r'^api/service/toggleEnable/$',
        services.toggleEnable,
        name='toggle-services'
    ),
    url(
        r'^api/service/singleToggleEnable/$',
        services.singleToggleEnable,
        name='single-toggle-services'
    ),
    url(
        r'^api/service/searchQuickForwarders/$',
        services.quickSearchForwarders,
        name='quick-search-forwarders'
    ),
    url(
        r'^api/service/searchForwarders/$',
        services.searchP2PForwarders,
        name='search-forwarders'
    ),
    url(
        r'^api/service/searchPackageCollectors/$',
        services.searchPackageCollectors,
        name='search-collectors'
    ),
    url(
        r'^api/order/$',
        require_POST(orders.getOrders),
        name='get-orders'
    ),
    url(
        r'^api/order/forwarder/$',
        require_POST(orders.getForwarderOrders),
        name='get-forwarder-orders'
    ),
    url(
        r'^api/order/forwarder/feedback/$',
        require_POST(orders.addOrderForwarderFeedbackToBuyer),
        name='forwarder-order-feedback'
    ),
    url(
        r'^api/order/create/$',
        orders.createOrder,
        name='create-order'
    ),
    url(
        r'^api/order/edit/$',
        orders.editOrder,
        name='edit-order'
    ),
    url(
        r'^api/order/delete/$',
        orders.deleteOrder,
        name='delete-order'
    ),
    url(
        r'^api/order/(?P<order_id>\d+)$',
        require_http_methods(['GET'])(orders.getOrder),
        name='get-forwarder-order'
    ),
    url(
        r'^api/order/forwarder/(?P<order_id>\d+)$',
        require_http_methods(['GET'])(orders.getForwarderOrder),
        name='get-order'
    ),
    url(
        r'^api/order/createOrderNote/$',
        orders.createOrderNote,
        name='create-ordernote-image'
    ),
    url(
        r'^api/order/forwarder/acceptOrRefuse/$',
        require_http_methods(['POST'])(orders.acceptOrRefuse),
        name='set-order-paid-status'
    ),
    url(
        r'^api/order/forwarder/collecting/$',
        require_http_methods(['POST'])(orders.collecting),
        name='set-order-accepted-status'
    ),
    url(
        r'^api/order/forwarder/forwardedDelivered/$',
        require_http_methods(['POST'])(orders.forwardedDelivered),
        name='set-order-collecting-status'
    ),
    url(
        r'^api/order/forwarder/updateTrackingInfo/$',
        require_http_methods(['POST'])(orders.updateForwarderTrackingInfo),
        name='set-order-updateForwarderTrackingInfo'
    ),
    url(
        r'^api/order/buyer/received/$',
        require_http_methods(['POST'])(orders.received),
        name='set-order-eccepted-status'
    ),
    url(
        r'^api/order/buyer/delivered/$',
        require_http_methods(['POST'])(orders.delivered),
        name='set-order-eccepted-status'
    ),
    url(
        r'^api/order/buyer/updateTrackingInfo/$',
        require_http_methods(['POST'])(orders.updateBuyerTrackingInfo),
        name='set-order-updateBuyerTrackingInfo'
    ),
    url(
        r'^api/order/forwarder/updateForwarderPartnerTrackingInfo/$',
        require_http_methods(['POST'])(orders.updateForwarderPartnerTrackingInfo),
        name='set-order-forwarder-partner-order-info'
    ),
    url(
        r'^api/order/updateRefuseReason/$',
        require_http_methods(['POST'])(orders.updateRefuseReason),
        name='set-order-updateRefuseReason'
    ),
    url(
        r'^api/order/buyer/cancel/$',
        require_http_methods(['POST'])(orders.cancel),
        name='set-order-eccepted-status'
    ),
    url(
        r'^api/order/buyer/feedback/$',
        require_POST(orders.addOrderBuyerFeedbackToForwarder),
        name='buyer-order-feedback'
    ),
    url(
        r'^api/issue/create/$',
        issues.createIssue,
        name='create-issue'
    ),
    url(
        r'^api/issue/(?P<issue_id>\d+)$',
        require_http_methods(['GET'])(issues.getIssue),
        name='get-issue'
    ),
    url(
        r'^api/issue/close/$',
        issues.closeIssue,
        name='close-issue'
    ),
    url(
        r'^api/chat/createIssueChatMessage/$',
        chats.createIssueChatMessage,
        name='create-issue-chat-message'
    ),
    url(
        r'^api/event/$',
        require_POST(events.getEvents),
        name='get-events'
    ),
    url(
        r'^api/maps/autocomplete/$',
        googleapis.autocomplete,
        name='places-autocomplete'
    ),
    url(
        r'^api/maps/details/$',
        googleapis.details,
        name='places-autocomplete'
    ),
    url(
        r'^api/maps/geocodeSearch/$',
        googleapis.geocodeSearch,
        name='geocode-search'
    ),
    url(
        r'^api/currency/lwfbundletocryptocurrency/$',
        require_POST(currencies.lwfBundleToCryptoCurrency),
        name='lwfbundle-to-cryptocurrency'
    ),
    url(
        r'^api/currency/lwfBundleToEuro/$',
        require_POST(currencies.lwfBundleToEuro),
        name='lwfbundle-to-euro'
    ),
    url(
        r'^api/currency/EuroToDollars/$',
        require_POST(currencies.EuroToDollars),
        name='euro-to-usd'
    ),
    # ADMIN HERE
    url(
        r'^admin/verification.html',
        adminviews.documentsVerification,
        name='admin-documents-verifications'
    ),
    url(
        r'^admin/ajax/verification_validate.html',
        adminviews.adminAjaxVerificationValidate,
        name='admin-verification-validate'
    ),
    url(
        r'^admin/ajax/verification_invalidate.html',
        adminviews.adminAjaxVerificationInvalidate,
        name='admin-verification-invalidate'
    ),
    url(
        r'^admin/issue_manage.html',
        adminviews.adminIssueManage,
        name='admin-issue-manage'
    ),
    url(
        r'^admin/courier_manage_prices.html',
        adminviews.adminCourierPriceManage,
        name='admin-partner-courier-manage'
    ),
    url(
        r'^admin/updateCourierPrices',
        adminviews.updateCourierPrices,
        name='admin-partner-courier-price-update'
    ),
    url(
        r'^admin/deleteAllCourierPrices',
        adminviews.deleteAllCourierPrices,
        name='admin-partner-courier-price-delete'
    ),
    url(
        r'^admin/orders_manage_notes.html',
        adminviews.adminOrderNotesManage,
        name='admin-order-notes-manage'
    ),
    url(
        r'^admin/adminSendOrderNote',
        adminviews.adminSendOrderNote,
        name='admin-send-order-notes'
    ),
    url(
        r'^admin/ajax/issue_close.html',
        adminviews.adminAjaxIssueClose,
        name='admin-issue-close'
    ),
    url(
        r'^admin/ajax/get_chat_data.html',
        adminchatviews.adminAjaxGetChatData,
        name='admin-get-chat-data'
    ),
    url(
        r'^admin/ajax/post_chat_message.html',
        adminchatviews.adminAjaxPostChatMessage,
        name='admin-post-chat-message'
    ),
    url(
        r'^api/order/getCouriers/$',
        orders.getCouriers,
        name='get-couriers'
    ),
    url(
        r'^api/order/partnerOrderPrice/$',
        orders.partnerOrderPrice,
        name='get-parner-order-price'
    ),
    url(
        r'^api/order/getPartnerCourierWeightList/$',
        orders.getPartnerCourierWeightList,
        name='get-parner-courier-weights'
    ),
    url(
        r'^test_template_email.html',
        auth.testTemplateEmail,
        name='test-template-email'
    ),
]
